version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "9099:9099"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
      - DB_HOST=mysql-container
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=your_password_here
      - DB_NAME=stock
      - DB_CHARSET=utf8mb4
      - DB_CONNECT_RETRY=5
      - DB_CONNECT_RETRY_DELAY=3
    depends_on:
      - db
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    mem_limit: 1G

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "9009:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      - TZ=Asia/Shanghai
      - BACKEND_HOST=backend
      - BACKEND_PORT=9099
    depends_on:
      - backend
    networks:
      - stock-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    mem_limit: 512M

  db:
    image: mysql:8.0
    container_name: mysql-container
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=your_password_here
      - MYSQL_DATABASE=stock
      - MYSQL_USER=stockuser
      - MYSQL_PASSWORD=your_password_here
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    networks:
      - stock-network
    mem_limit: 512M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pyour_password_here"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  stock-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 